import { IInfo } from 'src/app/shared/interfaces';

export const HTTP_STATUSES: IInfo = {
    title: 'HTTP-статусы',
    body: `<p>Самые важные статусы, которые нужно знать frontend-разработчику:</p>
            <ul>
                <li>
                    <code>200</code> - <span class="attention">OK</span> - Запрос успешно выполнился и сервер вернул ответ с данными. <br />На фронте —
                    просто обрабатываем ответ (отображаем данные, показываем сообщение и т.п.).
                </li>
                <li>
                    <code>201</code> - <span class="attention">Created</span> - Успешное создание ресурса (например, при POST-запросе на создание
                    пользователя или заказа). <br />На фронте: можно показать уведомление вроде “Создано успешно” и
                    обновить список.
                </li>
                <li>
                    <code>204</code> - <span class="attention">No Content</span> - Запрос успешен, но данных в ответе нет. Обычно после DELETE-запросов
                    или PUT без возврата данных. <br />На фронте: ничего не отображаем, просто обновляем UI.
                </li>
                <li>
                    <code>400</code> - <span class="attention">Bad Request</span> - Сервер не понял запрос. Обычно: фронт отправил что-то не то
                    (например, невалидные данные формы). <br />На фронте: показываем ошибку пользователю — “Неверные
                    данные”.
                </li>
                <li>
                    <code>401</code> - <span class="attention">Unauthorized</span> - Это про аутентификацию (authentication). Пользователь не
                    авторизован, то есть:
                    <ul>
                        <li>либо токен отсутствует;</li>
                        <li>либо токен истёк;</li>
                        <li>либо он неверный.</li>
                    </ul>
                    <q>Обычно сервер говорит: "Я не знаю, кто ты".</q><br />
                    На фронте обычно в таких случаях показываем сообщение "Необходимо авторизоваться" и перенаправляем
                    на страницу авторизации.
                </li>
                <li>
                    <code>403</code> - <span class="attention">Forbidden</span>. Это уже про авторизацию (authorization). Пользователь авторизован, но
                    не имеет прав на действие. <br /><q>Сервер говорит: "Я знаю, кто ты, но тебе сюда нельзя."</q><br />
                    На фронте обычно показываем сообщение вроде: "Недостаточно прав" или "Доступ запрещён".
                </li>
                <li>
                    <code>404</code> - <span class="attention">Not Found</span>. Ресурс не найден. <br />
                    На фронте: показываем страницу 404 или уведомление "Не найдено".
                </li>
                <li>
                    <code>409</code> - <span class="attention">Conflict</span>. Конфликт при изменении данных. Например, это может произойти при
                    попытке зарегистрировать пользователя на email, который уже занят. <br />
                    На фронте: показываем сообщение “Такой пользователь уже существует”.
                </li>
                <li>
                    <code>422</code> - <span class="attention">Unprocessable Entity</span>. Сервер понял запрос, но не смог обработать из-за ошибок в
                    данных. Часто используется для валидации. <br />
                    На фронте: отображаем ошибки форм (например, "Некорректный email" или "Пароли не совпадают").
                </li>
                <li>
                    <code>500</code> - <span class="attention">Internal Server Error</span>. Ошибка на сервере. <br />
                    На фронте: показываем уведомление вроде “Что-то пошло не так” и логируем.
                </li>
            </ul>`,
    selected: false,
    lastUpdate: '30.10.2025',
};
