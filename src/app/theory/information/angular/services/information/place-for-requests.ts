import { IInfo } from 'src/app/shared/interfaces';

export const PLACE_FOR_REQUESTS: IInfo = {
    title: 'Сервисы - место для запросов к серверу',
    body: `<p>
                Давайте разберем, почему запросы к серверу в Angular делаются с помощью сервисов, а не компонентов,
                директив или чего-либо еще. Ведь никто же нам не запрещает внедрить в любой из компонентов нашего
                приложения модуль <code>HttpClient</code> и вызвать любой из его методов.
            </p>
            <p>Запросы к сторонним ресурсам именно через сервисы в Angular делаются по нескольким причинам:</p>
            <ul>
                <li>
                    Есть такое понятие, как "<span class="attention">Разделение ответственности</span>". Компоненты в
                    Angular предназначены для управления представлением (UI) и взаимодействием с пользователем, а
                    сервисы — для выполнения бизнес-логики и работы с данными. Запросы к серверу относятся к
                    бизнес-логике, а не к управлению интерфейсом, поэтому их логично размещать в сервисах. Это делает
                    код более читаемым и поддерживаемым;
                </li>
                <li>
                    <p>
                        Вторая причина - это
                        <span class="attention">возможность переиспользования одного и того же кода</span>. Если логика
                        работы с сервером находится в компоненте, она становится доступной только в этом компоненте. И
                        если она нам понадобится в другом месте, то ее нужно будет написать еще и там. Т.е., произойдет
                        дублирование одного и того же кода;
                    </p>
                    <p>
                        <span class="attention">
                            В сервисах же можно сделать общие методы для взаимодействия с API, и эти методы могут быть
                            использоваться в нескольких компонентах</span
                        >, что предотвращает дублирование кода и отправки лишних запросов на сервер. И если нам нужно
                        будет поменять адрес, с которого мы запрашиваем данные, то изменить код нужно будет лишь в одном
                        месте. А если делать запросы из компонентов, то нужно будет менять код во всех таких местах.
                    </p>
                </li>
                <li>
                    Третья причина, вытекающая из второй - это
                    <span class="attention">возможность использования паттерна внедрение зависимости</span> (<code
                        >DI</code
                    >
                    или <code>Dependency Injection</code>), который позволяет использовать один и тот же экземпляр
                    сервиса в разных местах приложения, т.е. делать сервис <code>singleton</code>.
                </li>
            </ul>
            <p>
                Можно привести еще более мелкие причины, например что сервисы легче тестировать, т.к. они не зависят от
                представления и т.д. Но так или иначе это все уже вытекает из перечисленного выше.
            </p>`,
    selected: false,
    lastUpdate: '04.10.2024',
    footerLinks: [
        {
            path: 'https://youtu.be/oOrI3qm7tK8?t=609',
        },
    ],
};
